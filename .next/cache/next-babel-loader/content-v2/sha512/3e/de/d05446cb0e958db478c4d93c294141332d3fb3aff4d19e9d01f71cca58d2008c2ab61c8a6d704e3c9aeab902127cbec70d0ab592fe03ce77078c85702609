{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/calvincheung/Desktop/React/section23-3/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://rimage.gnst.jp/livejapan.com/public/article/detail/a/20/00/a2000099/img/en/a2000099_main.jpg?20201225090446&q=80&rw=750&rh=536\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://lisidakun:aramrocks@cluster0.kb6kw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({});\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://rimage.gnst.jp/livejapan.com/public/article/detail/a/20/00/a2000099/img/en/a2000099_main.jpg?20201225090446&q=80&rw=750&rh=536\",\n        id: meetupId,\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/calvincheung/Desktop/React/section23-3/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","fallback","paths","map","meetup","params","meetupId","_id","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wIADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,CAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEH,OAAO,CAACI,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,wIAFQ;AAGVC,QAAAA,EAAE,EAAEV,QAHM;AAIVW,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,0BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe3B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      image=\"https://rimage.gnst.jp/livejapan.com/public/article/detail/a/20/00/a2000099/img/en/a2000099_main.jpg?20201225090446&q=80&rw=750&rh=536\"\n      title=\"First Meetup\"\n      address=\"Some Street 5, Some City\"\n      description=\"This is a first meetup\"\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://lisidakun:aramrocks@cluster0.kb6kw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({});\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://rimage.gnst.jp/livejapan.com/public/article/detail/a/20/00/a2000099/img/en/a2000099_main.jpg?20201225090446&q=80&rw=750&rh=536\",\n        id: meetupId,\n        title: \"First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"This is a first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}